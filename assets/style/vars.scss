///////// MIXINS AND VARIABLES ////////////////////////////////////////////////////////////////////////

// paths
$path-images: "../assets/images";

// site width:
$site-width: 1500px;

// media queries
$bp1: 750px;
$bp2: 1000px;
$bp3: $site-width;

// breakpoint mixins
@mixin bp($breakpoint) {
    @media only screen and (min-width: $breakpoint) {
        @content;
    }
}

@mixin bp-minus($breakpoint) {
    @media only screen and (max-width: $breakpoint) {
        @content;
    }
}

// colors
$color-brand: #eb3f3f;
$color-accent: #ffd700;
$color-dark-gray: #4B4B4B;
$color-feint: #9b9b9b;
$black: #262626;
$white: #ffffff;
$gray: #f2f2f2;
$white-darken: darken($white, 5);
$black-darken: darken($black, 5);
$black-darken7: darken($black, 7);
$black-darken10: darken($black, 10);
$black-lighten: lighten($black, 20);
$color-text: #444444;

// font loading
/*
font-family: 'IBM Plex Sans', sans-serif;
font-family: 'Rubik', sans-serif;
*/

// fonts
$font-brand: "Rubik", sans-serif;
$font-std: "Rubik", sans-serif;

// font-size;
$font-size-base: 62.5%;
$font-size-small: 1.7rem;
$font-size-std: 2.2rem;
$font-size-large: 3rem;
$font-size-big: 4rem;

// font weights
$thin: 300;
$std: 400;
$bold: 500;
$chunky: 700;

// font margins
$text-padding-std: 3rem;

// line height
$line-height: 1.5;

// grid space
$grid-space: $text-padding-std;

// underline
@mixin text-underline($color) {
    text-decoration: underline;
    text-decoration-skip-ink: auto;
    text-decoration-color: $color;
}

@mixin text-intro {
    font-weight: $thin;
    font-size: 2em;
    line-height: 2;

    p {
        line-height: 1.4;
    }
}

@mixin text-page-title {
    font-size: 2.3rem;
    font-weight: $bold;
    line-height: 1.2;
}

@mixin text-snippet {
    font-weight: 300;
    font-size: 1.5em;
}

@mixin text-leadin {
    p {
        font-weight: $std;
        font-size: $font-size-large;

        @include bp-minus($bp1) {
            font-size: $font-size-std;
        }
    }
}

@mixin text-title {
    font-weight: $bold;
    font-size: 2.3rem;

    @include bp($bp2) {
        font-weight: $bold;
        font-size: 3rem;
    }
}

@mixin text-title-item {
    font-weight: $bold;
    line-height: 1.2;

    @include bp-minus($bp1) {
        font-size: $font-size-big;
    }


    font-size: 2.2em;

    a {
        border-bottom: 3px solid $color-brand;
    }

    @include bp($bp2) {
        font-size: 4rem;
    }
}

@mixin text-title-pagehead {
    font-weight: $bold;
    line-height: 1.4;
    font-size: $font-size-big;

    span {
        border-bottom: 6px solid $color-brand;
    }

    @include bp($bp2) {
        font-size: 6rem;
    }
}

@mixin text-tiny {
    font-size: .8em;
}

// styled links
@mixin link-styled {
    font-weight: $std;

    a {
        @include text-underline($color-brand);
    }
}

// text body
@mixin text-body {
    font-size: $font-size-std;
    font-weight: $thin;

    @include bp-minus($bp1) {
        font-size: $font-size-small;
    }


    strong {
        font-weight: $bold;
    }

    h1, h2, h3, h4, h5 {
        @include text-title;

        &:first-of-type {
            padding-top: 0;
        }

        border-bottom: 2px solid red;
        display: inline;
        line-height: 1.6;

        &:before {
            content: '';
            height: $text-padding-std;
            display: block;
        }

        &:after {
            content: '';
            height: $text-padding-std;
            display: block;
        }
    }

    p, ol, ul {
        padding: 0;
        margin: 0;
        margin-top: $text-padding-std / 2;
        margin-bottom: $text-padding-std / 2;
    }

    hr {
        margin-top: $text-padding-std * 4;
        margin-bottom: $text-padding-std * 2;
    }

    h1, h2, h3, h4, h5 {
        margin-top: $text-padding-std;
        margin-bottom: $text-padding-std;

        &:first-of-type {
            margin-top: 0;
        }
    }

    code {
        display: block;
        background: $gray;
        padding: $text-padding-std;
        color: $black;
        border-radius: 4px;

        .dark-mode & {
            color: white;
            background-color: $black-darken10;
        }
    }

    p > code {
        padding: ($text-padding-std / 2) $text-padding-std;
    }

    hr {
        background-color: $color-brand;
        border: none;
        height: 4px;
    }

    ul {
        box-sizing: border-box;
    }

    li {
        list-style: none;
        position: relative;
        display: flex;
        align-items: baseline;

        &:before {
            margin-right: .5em;
            content: '';
            display: block;
            width: 5px;
            height: 5px;
            background-color: $color-brand;
            flex-shrink: 0;
            position: relative;
            top: -3px;
        }
    }

    & > *:last-child {
        margin-bottom: 0;
        padding-bottom: 0;
    }
}

// link color
$link-color: $black;

// text shadow
$text-shadow-std: 1px 1px 2px $black;

// raised item shadow
$shadow: 0px 5px 10px rgba(93, 93, 93, 0.3);

// lines
$line-solid: 1px;
$line-thick: 2px;

// borders

$border-feint: rgba($black, 0.2) solid 1px;
$border-brand-feint: rgba($color-brand, 0.2) solid 1px;

///////// LAYOUT AND GRID ////////////////////////////////////////////////////////////////////////

@mixin col-std($width) {
    width: auto;

    @include bp($bp2) {
        position: relative;
        width: 75%;
        left: 25%;
    }
}

// header
$header-height: 80px;

// margin on mobile
$textmarginmobile: 4rem;

// Aspect ratios
$aspect_1-1: 100%;
$aspect_16-9: 56.25%;
$aspect_4-3: 75%;
$aspect_3-2: 66.66%;
$aspect_8-5: 62.5%;

// Spacing
$padding-std: 2.5rem;

// global anim
@mixin darkenbgonhover($color) {
    @keyframes darkenbg {
        from {
            background-color: $color;
        }

        to {
            background-color: darken($color, 5%);
        }
    }

    @keyframes darkenbgrev {
        from {
            background-color: darken($color, 5%);
        }

        to {
            background-color: $color;
        }
    }
}

// mobile text margin
@mixin mobile-text-margin {
    max-width: 90vw;
    padding-left: 5vw;
    padding-right: 5vw;
}

// Turn button into inline link
@mixin button-inline {
    border-radius: 0;
    border: none;
    display: inline;
    padding: 0;
    font-family: inherit;
    cursor: pointer;
    color: $link-color;
}

// Align
@mixin align-left {
    display: flex;
    align-items: center;
    justify-content: flex-start;
}

@mixin align-left-top {
    display: flex;
    align-items: flex-start;
    justify-content: flex-start;
}

@mixin align-left-bottom {
    display: flex;
    align-items: flex-end;
    justify-content: flex-start;
}

@mixin align-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin align-center-top {
    display: flex;
    align-items: flex-start;
    justify-content: center;
}

@mixin align-center-bottom {
    display: flex;
    align-items: flex-end;
    justify-content: center;
}

@mixin align-right {
    display: flex;
    align-items: center;
    justify-content: flex-end;
}

@mixin align-right-top {
    display: flex;
    align-items: flex-start;
    justify-conten: flex-start;
}

@mixin align-right-bottom {
    display: flex;
    align-items: flex-start;
    justify-conten: flex-end;
}

// ANIMATION ====================================================================================================

// fancy transitions
$move-whip: cubic-bezier(0.8, 0, 0.3, 1);
$move-snap: cubic-bezier(0.7, -0.5, 0.3, 1.5);
$move-snap-in: cubic-bezier(0.6, -0.3, 0.7, 0);
$move-snap-out: cubic-bezier(0.2, 0.9, 0.3, 1.3);

@mixin transition($property: all, $speed: 0.2s, $anim: linear) {
    transition-property: $property;
    transition-duration: $speed;
    transition-timing-function: $anim;
}

// multiple arguments
@mixin transitions($speed, $anim, $property...) {
    transition-property: $property;
    transition-duration: $speed;
    transition-timing-function: $anim;
}

///////// MISC ////////////////////////////////////////////////////////////////////////

%anchor {
    text-decoration: none;
    color: inherit;
    transition: color .3s;

    &:hover {
        color: $color-brand;
    }
}
